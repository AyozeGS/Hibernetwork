/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JFrame;

/**
 *
 * @author Ayoze Gil
 */
public class MainView extends javax.swing.JFrame {

    private LoginPanel loginPanel = null;
    private RegisterPanel registerPanel = null;
    private SessionPanel sessionPanel = null;
    private final Dimension DIMENSION = Toolkit.getDefaultToolkit().getScreenSize();
    
    /**
     * Creates new form mainFrame
     */
    public MainView() {
        initComponents();
        setVisible(true);
        setLocation(DIMENSION.width/2 - getSize().width/2,
               DIMENSION.height/2 - getSize().height/2);
        setSize(974, 527);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        getContentPane().setBackground(new Color(153, 204, 255));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 153, 255));
        setIconImage(getIconImage());
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(974, 527));
        setPreferredSize(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("resources/icono.png"));
        return retValue;
    }
    
    public void initLogin(){
        if (registerPanel != null){
            registerPanel.setEnabled(false);
            registerPanel.setVisible(false);
            registerPanel = null;
        }
        if (sessionPanel != null){
            sessionPanel.setEnabled(false);
            sessionPanel.setVisible(false);
            sessionPanel = null;
        }
        setTitle("Hibernetwork - Login");
        loginPanel = new LoginPanel();
        getContentPane().removeAll();
        setLayout(new GridBagLayout());
        getContentPane().add(loginPanel);
    }

    public void initRegister(){
        if (loginPanel != null){
            loginPanel.setEnabled(false);
            loginPanel.setVisible(false);
            loginPanel = null;
        }
        if (sessionPanel != null){
            sessionPanel.setEnabled(false);
            sessionPanel.setVisible(false);
            sessionPanel = null;
        }
        setTitle("Hibernetwork - Registro");
        registerPanel = new RegisterPanel();
        getContentPane().removeAll();
        setLayout(new GridBagLayout());
        add(registerPanel);
    }
    
    public void initSession(){
        if (loginPanel != null){
            loginPanel.setEnabled(false);
            loginPanel.setVisible(false);
            loginPanel = null;
        }
        if (registerPanel != null){
            registerPanel.setEnabled(false);
            registerPanel.setVisible(false);
            registerPanel = null;
        }
        sessionPanel = new SessionPanel();
        getContentPane().removeAll();
        setLayout(new BorderLayout());
        add(sessionPanel);
    }
    
    public LoginPanel getLoginPanel() {
        return loginPanel;
    }
    
    public RegisterPanel getRegisterPanel() {
        return registerPanel;
    }

    public SessionPanel getSessionPanel() {
        return sessionPanel;
    }

    public Dimension getDIMENSION() {
        return DIMENSION;
    }

    public void setLoginPanel(LoginPanel loginPanel) {
        this.loginPanel = loginPanel;
    }

    public void setRegisterPanel(RegisterPanel registerPanel) {
        this.registerPanel = registerPanel;
    }

    public void setSessionPanel(SessionPanel sessionPanel) {
        this.sessionPanel = sessionPanel;
    }
}
